"use strict";

// Bit masks for each code point under U+0100, for fast lookup.
var pC = 1 << 0; // a control character.
var pP = 1 << 1; // a punctuation character.
var pN = 1 << 2; // a numeral.
var pS = 1 << 3; // a symbolic character.
var pZ = 1 << 4; // a spacing character.
var pLu = 1 << 5;// an upper-case letter.
var pLl = 1 << 6;// a lower-case letter.
var pp = 1 << 7; // a printable character according to Go's definition.
var pg = pp | pZ;   // a graphical character according to the Unicode definition.
var pLo = pLl | pLu; // a letter that is neither upper nor lower case.
var pLmask = pLo;

// Pc is the set of Unicode characters in category Pc.
var _Pc = {
  R16: [
    [0x005f, 0x203f, 8160],
    [0x2040, 0x2054, 20],
    [0xfe33, 0xfe34, 1],
    [0xfe4d, 0xfe4f, 1],
    [0xff3f, 0xff3f, 1],
  ],
};

var Digit = {
  R16: [
    [0x0030, 0x0039, 1],
    [0x0660, 0x0669, 1],
    [0x06f0, 0x06f9, 1],
    [0x07c0, 0x07c9, 1],
    [0x0966, 0x096f, 1],
    [0x09e6, 0x09ef, 1],
    [0x0a66, 0x0a6f, 1],
    [0x0ae6, 0x0aef, 1],
    [0x0b66, 0x0b6f, 1],
    [0x0be6, 0x0bef, 1],
    [0x0c66, 0x0c6f, 1],
    [0x0ce6, 0x0cef, 1],
    [0x0d66, 0x0d6f, 1],
    [0x0de6, 0x0def, 1],
    [0x0e50, 0x0e59, 1],
    [0x0ed0, 0x0ed9, 1],
    [0x0f20, 0x0f29, 1],
    [0x1040, 0x1049, 1],
    [0x1090, 0x1099, 1],
    [0x17e0, 0x17e9, 1],
    [0x1810, 0x1819, 1],
    [0x1946, 0x194f, 1],
    [0x19d0, 0x19d9, 1],
    [0x1a80, 0x1a89, 1],
    [0x1a90, 0x1a99, 1],
    [0x1b50, 0x1b59, 1],
    [0x1bb0, 0x1bb9, 1],
    [0x1c40, 0x1c49, 1],
    [0x1c50, 0x1c59, 1],
    [0xa620, 0xa629, 1],
    [0xa8d0, 0xa8d9, 1],
    [0xa900, 0xa909, 1],
    [0xa9d0, 0xa9d9, 1],
    [0xa9f0, 0xa9f9, 1],
    [0xaa50, 0xaa59, 1],
    [0xabf0, 0xabf9, 1],
    [0xff10, 0xff19, 1],
  ],
  R32: [
    [0x104a0, 0x104a9, 1],
    [0x11066, 0x1106f, 1],
    [0x110f0, 0x110f9, 1],
    [0x11136, 0x1113f, 1],
    [0x111d0, 0x111d9, 1],
    [0x112f0, 0x112f9, 1],
    [0x11450, 0x11459, 1],
    [0x114d0, 0x114d9, 1],
    [0x11650, 0x11659, 1],
    [0x116c0, 0x116c9, 1],
    [0x11730, 0x11739, 1],
    [0x118e0, 0x118e9, 1],
    [0x11c50, 0x11c59, 1],
    [0x16a60, 0x16a69, 1],
    [0x16b50, 0x16b59, 1],
    [0x1d7ce, 0x1d7ff, 1],
    [0x1e950, 0x1e959, 1],
  ],
  latinOffset: 1,
};

var Letter = {
  R16: [
    [0x0041, 0x005a, 1],
    [0x0061, 0x007a, 1],
    [0x00aa, 0x00b5, 11],
    [0x00ba, 0x00c0, 6],
    [0x00c1, 0x00d6, 1],
    [0x00d8, 0x00f6, 1],
    [0x00f8, 0x02c1, 1],
    [0x02c6, 0x02d1, 1],
    [0x02e0, 0x02e4, 1],
    [0x02ec, 0x02ee, 2],
    [0x0370, 0x0374, 1],
    [0x0376, 0x0377, 1],
    [0x037a, 0x037d, 1],
    [0x037f, 0x0386, 7],
    [0x0388, 0x038a, 1],
    [0x038c, 0x038e, 2],
    [0x038f, 0x03a1, 1],
    [0x03a3, 0x03f5, 1],
    [0x03f7, 0x0481, 1],
    [0x048a, 0x052f, 1],
    [0x0531, 0x0556, 1],
    [0x0559, 0x0561, 8],
    [0x0562, 0x0587, 1],
    [0x05d0, 0x05ea, 1],
    [0x05f0, 0x05f2, 1],
    [0x0620, 0x064a, 1],
    [0x066e, 0x066f, 1],
    [0x0671, 0x06d3, 1],
    [0x06d5, 0x06e5, 16],
    [0x06e6, 0x06ee, 8],
    [0x06ef, 0x06fa, 11],
    [0x06fb, 0x06fc, 1],
    [0x06ff, 0x0710, 17],
    [0x0712, 0x072f, 1],
    [0x074d, 0x07a5, 1],
    [0x07b1, 0x07ca, 25],
    [0x07cb, 0x07ea, 1],
    [0x07f4, 0x07f5, 1],
    [0x07fa, 0x0800, 6],
    [0x0801, 0x0815, 1],
    [0x081a, 0x0824, 10],
    [0x0828, 0x0840, 24],
    [0x0841, 0x0858, 1],
    [0x08a0, 0x08b4, 1],
    [0x08b6, 0x08bd, 1],
    [0x0904, 0x0939, 1],
    [0x093d, 0x0950, 19],
    [0x0958, 0x0961, 1],
    [0x0971, 0x0980, 1],
    [0x0985, 0x098c, 1],
    [0x098f, 0x0990, 1],
    [0x0993, 0x09a8, 1],
    [0x09aa, 0x09b0, 1],
    [0x09b2, 0x09b6, 4],
    [0x09b7, 0x09b9, 1],
    [0x09bd, 0x09ce, 17],
    [0x09dc, 0x09dd, 1],
    [0x09df, 0x09e1, 1],
    [0x09f0, 0x09f1, 1],
    [0x0a05, 0x0a0a, 1],
    [0x0a0f, 0x0a10, 1],
    [0x0a13, 0x0a28, 1],
    [0x0a2a, 0x0a30, 1],
    [0x0a32, 0x0a33, 1],
    [0x0a35, 0x0a36, 1],
    [0x0a38, 0x0a39, 1],
    [0x0a59, 0x0a5c, 1],
    [0x0a5e, 0x0a72, 20],
    [0x0a73, 0x0a74, 1],
    [0x0a85, 0x0a8d, 1],
    [0x0a8f, 0x0a91, 1],
    [0x0a93, 0x0aa8, 1],
    [0x0aaa, 0x0ab0, 1],
    [0x0ab2, 0x0ab3, 1],
    [0x0ab5, 0x0ab9, 1],
    [0x0abd, 0x0ad0, 19],
    [0x0ae0, 0x0ae1, 1],
    [0x0af9, 0x0b05, 12],
    [0x0b06, 0x0b0c, 1],
    [0x0b0f, 0x0b10, 1],
    [0x0b13, 0x0b28, 1],
    [0x0b2a, 0x0b30, 1],
    [0x0b32, 0x0b33, 1],
    [0x0b35, 0x0b39, 1],
    [0x0b3d, 0x0b5c, 31],
    [0x0b5d, 0x0b5f, 2],
    [0x0b60, 0x0b61, 1],
    [0x0b71, 0x0b83, 18],
    [0x0b85, 0x0b8a, 1],
    [0x0b8e, 0x0b90, 1],
    [0x0b92, 0x0b95, 1],
    [0x0b99, 0x0b9a, 1],
    [0x0b9c, 0x0b9e, 2],
    [0x0b9f, 0x0ba3, 4],
    [0x0ba4, 0x0ba8, 4],
    [0x0ba9, 0x0baa, 1],
    [0x0bae, 0x0bb9, 1],
    [0x0bd0, 0x0c05, 53],
    [0x0c06, 0x0c0c, 1],
    [0x0c0e, 0x0c10, 1],
    [0x0c12, 0x0c28, 1],
    [0x0c2a, 0x0c39, 1],
    [0x0c3d, 0x0c58, 27],
    [0x0c59, 0x0c5a, 1],
    [0x0c60, 0x0c61, 1],
    [0x0c80, 0x0c85, 5],
    [0x0c86, 0x0c8c, 1],
    [0x0c8e, 0x0c90, 1],
    [0x0c92, 0x0ca8, 1],
    [0x0caa, 0x0cb3, 1],
    [0x0cb5, 0x0cb9, 1],
    [0x0cbd, 0x0cde, 33],
    [0x0ce0, 0x0ce1, 1],
    [0x0cf1, 0x0cf2, 1],
    [0x0d05, 0x0d0c, 1],
    [0x0d0e, 0x0d10, 1],
    [0x0d12, 0x0d3a, 1],
    [0x0d3d, 0x0d4e, 17],
    [0x0d54, 0x0d56, 1],
    [0x0d5f, 0x0d61, 1],
    [0x0d7a, 0x0d7f, 1],
    [0x0d85, 0x0d96, 1],
    [0x0d9a, 0x0db1, 1],
    [0x0db3, 0x0dbb, 1],
    [0x0dbd, 0x0dc0, 3],
    [0x0dc1, 0x0dc6, 1],
    [0x0e01, 0x0e30, 1],
    [0x0e32, 0x0e33, 1],
    [0x0e40, 0x0e46, 1],
    [0x0e81, 0x0e82, 1],
    [0x0e84, 0x0e87, 3],
    [0x0e88, 0x0e8a, 2],
    [0x0e8d, 0x0e94, 7],
    [0x0e95, 0x0e97, 1],
    [0x0e99, 0x0e9f, 1],
    [0x0ea1, 0x0ea3, 1],
    [0x0ea5, 0x0ea7, 2],
    [0x0eaa, 0x0eab, 1],
    [0x0ead, 0x0eb0, 1],
    [0x0eb2, 0x0eb3, 1],
    [0x0ebd, 0x0ec0, 3],
    [0x0ec1, 0x0ec4, 1],
    [0x0ec6, 0x0edc, 22],
    [0x0edd, 0x0edf, 1],
    [0x0f00, 0x0f40, 64],
    [0x0f41, 0x0f47, 1],
    [0x0f49, 0x0f6c, 1],
    [0x0f88, 0x0f8c, 1],
    [0x1000, 0x102a, 1],
    [0x103f, 0x1050, 17],
    [0x1051, 0x1055, 1],
    [0x105a, 0x105d, 1],
    [0x1061, 0x1065, 4],
    [0x1066, 0x106e, 8],
    [0x106f, 0x1070, 1],
    [0x1075, 0x1081, 1],
    [0x108e, 0x10a0, 18],
    [0x10a1, 0x10c5, 1],
    [0x10c7, 0x10cd, 6],
    [0x10d0, 0x10fa, 1],
    [0x10fc, 0x1248, 1],
    [0x124a, 0x124d, 1],
    [0x1250, 0x1256, 1],
    [0x1258, 0x125a, 2],
    [0x125b, 0x125d, 1],
    [0x1260, 0x1288, 1],
    [0x128a, 0x128d, 1],
    [0x1290, 0x12b0, 1],
    [0x12b2, 0x12b5, 1],
    [0x12b8, 0x12be, 1],
    [0x12c0, 0x12c2, 2],
    [0x12c3, 0x12c5, 1],
    [0x12c8, 0x12d6, 1],
    [0x12d8, 0x1310, 1],
    [0x1312, 0x1315, 1],
    [0x1318, 0x135a, 1],
    [0x1380, 0x138f, 1],
    [0x13a0, 0x13f5, 1],
    [0x13f8, 0x13fd, 1],
    [0x1401, 0x166c, 1],
    [0x166f, 0x167f, 1],
    [0x1681, 0x169a, 1],
    [0x16a0, 0x16ea, 1],
    [0x16f1, 0x16f8, 1],
    [0x1700, 0x170c, 1],
    [0x170e, 0x1711, 1],
    [0x1720, 0x1731, 1],
    [0x1740, 0x1751, 1],
    [0x1760, 0x176c, 1],
    [0x176e, 0x1770, 1],
    [0x1780, 0x17b3, 1],
    [0x17d7, 0x17dc, 5],
    [0x1820, 0x1877, 1],
    [0x1880, 0x1884, 1],
    [0x1887, 0x18a8, 1],
    [0x18aa, 0x18b0, 6],
    [0x18b1, 0x18f5, 1],
    [0x1900, 0x191e, 1],
    [0x1950, 0x196d, 1],
    [0x1970, 0x1974, 1],
    [0x1980, 0x19ab, 1],
    [0x19b0, 0x19c9, 1],
    [0x1a00, 0x1a16, 1],
    [0x1a20, 0x1a54, 1],
    [0x1aa7, 0x1b05, 94],
    [0x1b06, 0x1b33, 1],
    [0x1b45, 0x1b4b, 1],
    [0x1b83, 0x1ba0, 1],
    [0x1bae, 0x1baf, 1],
    [0x1bba, 0x1be5, 1],
    [0x1c00, 0x1c23, 1],
    [0x1c4d, 0x1c4f, 1],
    [0x1c5a, 0x1c7d, 1],
    [0x1c80, 0x1c88, 1],
    [0x1ce9, 0x1cec, 1],
    [0x1cee, 0x1cf1, 1],
    [0x1cf5, 0x1cf6, 1],
    [0x1d00, 0x1dbf, 1],
    [0x1e00, 0x1f15, 1],
    [0x1f18, 0x1f1d, 1],
    [0x1f20, 0x1f45, 1],
    [0x1f48, 0x1f4d, 1],
    [0x1f50, 0x1f57, 1],
    [0x1f59, 0x1f5f, 2],
    [0x1f60, 0x1f7d, 1],
    [0x1f80, 0x1fb4, 1],
    [0x1fb6, 0x1fbc, 1],
    [0x1fbe, 0x1fc2, 4],
    [0x1fc3, 0x1fc4, 1],
    [0x1fc6, 0x1fcc, 1],
    [0x1fd0, 0x1fd3, 1],
    [0x1fd6, 0x1fdb, 1],
    [0x1fe0, 0x1fec, 1],
    [0x1ff2, 0x1ff4, 1],
    [0x1ff6, 0x1ffc, 1],
    [0x2071, 0x207f, 14],
    [0x2090, 0x209c, 1],
    [0x2102, 0x2107, 5],
    [0x210a, 0x2113, 1],
    [0x2115, 0x2119, 4],
    [0x211a, 0x211d, 1],
    [0x2124, 0x212a, 2],
    [0x212b, 0x212d, 1],
    [0x212f, 0x2139, 1],
    [0x213c, 0x213f, 1],
    [0x2145, 0x2149, 1],
    [0x214e, 0x2183, 53],
    [0x2184, 0x2c00, 2684],
    [0x2c01, 0x2c2e, 1],
    [0x2c30, 0x2c5e, 1],
    [0x2c60, 0x2ce4, 1],
    [0x2ceb, 0x2cee, 1],
    [0x2cf2, 0x2cf3, 1],
    [0x2d00, 0x2d25, 1],
    [0x2d27, 0x2d2d, 6],
    [0x2d30, 0x2d67, 1],
    [0x2d6f, 0x2d80, 17],
    [0x2d81, 0x2d96, 1],
    [0x2da0, 0x2da6, 1],
    [0x2da8, 0x2dae, 1],
    [0x2db0, 0x2db6, 1],
    [0x2db8, 0x2dbe, 1],
    [0x2dc0, 0x2dc6, 1],
    [0x2dc8, 0x2dce, 1],
    [0x2dd0, 0x2dd6, 1],
    [0x2dd8, 0x2dde, 1],
    [0x2e2f, 0x3005, 470],
    [0x3006, 0x3031, 43],
    [0x3032, 0x3035, 1],
    [0x303b, 0x303c, 1],
    [0x3041, 0x3096, 1],
    [0x309d, 0x309f, 1],
    [0x30a1, 0x30fa, 1],
    [0x30fc, 0x30ff, 1],
    [0x3105, 0x312d, 1],
    [0x3131, 0x318e, 1],
    [0x31a0, 0x31ba, 1],
    [0x31f0, 0x31ff, 1],
    [0x3400, 0x4db5, 1],
    [0x4e00, 0x9fd5, 1],
    [0xa000, 0xa48c, 1],
    [0xa4d0, 0xa4fd, 1],
    [0xa500, 0xa60c, 1],
    [0xa610, 0xa61f, 1],
    [0xa62a, 0xa62b, 1],
    [0xa640, 0xa66e, 1],
    [0xa67f, 0xa69d, 1],
    [0xa6a0, 0xa6e5, 1],
    [0xa717, 0xa71f, 1],
    [0xa722, 0xa788, 1],
    [0xa78b, 0xa7ae, 1],
    [0xa7b0, 0xa7b7, 1],
    [0xa7f7, 0xa801, 1],
    [0xa803, 0xa805, 1],
    [0xa807, 0xa80a, 1],
    [0xa80c, 0xa822, 1],
    [0xa840, 0xa873, 1],
    [0xa882, 0xa8b3, 1],
    [0xa8f2, 0xa8f7, 1],
    [0xa8fb, 0xa8fd, 2],
    [0xa90a, 0xa925, 1],
    [0xa930, 0xa946, 1],
    [0xa960, 0xa97c, 1],
    [0xa984, 0xa9b2, 1],
    [0xa9cf, 0xa9e0, 17],
    [0xa9e1, 0xa9e4, 1],
    [0xa9e6, 0xa9ef, 1],
    [0xa9fa, 0xa9fe, 1],
    [0xaa00, 0xaa28, 1],
    [0xaa40, 0xaa42, 1],
    [0xaa44, 0xaa4b, 1],
    [0xaa60, 0xaa76, 1],
    [0xaa7a, 0xaa7e, 4],
    [0xaa7f, 0xaaaf, 1],
    [0xaab1, 0xaab5, 4],
    [0xaab6, 0xaab9, 3],
    [0xaaba, 0xaabd, 1],
    [0xaac0, 0xaac2, 2],
    [0xaadb, 0xaadd, 1],
    [0xaae0, 0xaaea, 1],
    [0xaaf2, 0xaaf4, 1],
    [0xab01, 0xab06, 1],
    [0xab09, 0xab0e, 1],
    [0xab11, 0xab16, 1],
    [0xab20, 0xab26, 1],
    [0xab28, 0xab2e, 1],
    [0xab30, 0xab5a, 1],
    [0xab5c, 0xab65, 1],
    [0xab70, 0xabe2, 1],
    [0xac00, 0xd7a3, 1],
    [0xd7b0, 0xd7c6, 1],
    [0xd7cb, 0xd7fb, 1],
    [0xf900, 0xfa6d, 1],
    [0xfa70, 0xfad9, 1],
    [0xfb00, 0xfb06, 1],
    [0xfb13, 0xfb17, 1],
    [0xfb1d, 0xfb1f, 2],
    [0xfb20, 0xfb28, 1],
    [0xfb2a, 0xfb36, 1],
    [0xfb38, 0xfb3c, 1],
    [0xfb3e, 0xfb40, 2],
    [0xfb41, 0xfb43, 2],
    [0xfb44, 0xfb46, 2],
    [0xfb47, 0xfbb1, 1],
    [0xfbd3, 0xfd3d, 1],
    [0xfd50, 0xfd8f, 1],
    [0xfd92, 0xfdc7, 1],
    [0xfdf0, 0xfdfb, 1],
    [0xfe70, 0xfe74, 1],
    [0xfe76, 0xfefc, 1],
    [0xff21, 0xff3a, 1],
    [0xff41, 0xff5a, 1],
    [0xff66, 0xffbe, 1],
    [0xffc2, 0xffc7, 1],
    [0xffca, 0xffcf, 1],
    [0xffd2, 0xffd7, 1],
    [0xffda, 0xffdc, 1],
  ],
  R32: [
    [0x10000, 0x1000b, 1],
    [0x1000d, 0x10026, 1],
    [0x10028, 0x1003a, 1],
    [0x1003c, 0x1003d, 1],
    [0x1003f, 0x1004d, 1],
    [0x10050, 0x1005d, 1],
    [0x10080, 0x100fa, 1],
    [0x10280, 0x1029c, 1],
    [0x102a0, 0x102d0, 1],
    [0x10300, 0x1031f, 1],
    [0x10330, 0x10340, 1],
    [0x10342, 0x10349, 1],
    [0x10350, 0x10375, 1],
    [0x10380, 0x1039d, 1],
    [0x103a0, 0x103c3, 1],
    [0x103c8, 0x103cf, 1],
    [0x10400, 0x1049d, 1],
    [0x104b0, 0x104d3, 1],
    [0x104d8, 0x104fb, 1],
    [0x10500, 0x10527, 1],
    [0x10530, 0x10563, 1],
    [0x10600, 0x10736, 1],
    [0x10740, 0x10755, 1],
    [0x10760, 0x10767, 1],
    [0x10800, 0x10805, 1],
    [0x10808, 0x1080a, 2],
    [0x1080b, 0x10835, 1],
    [0x10837, 0x10838, 1],
    [0x1083c, 0x1083f, 3],
    [0x10840, 0x10855, 1],
    [0x10860, 0x10876, 1],
    [0x10880, 0x1089e, 1],
    [0x108e0, 0x108f2, 1],
    [0x108f4, 0x108f5, 1],
    [0x10900, 0x10915, 1],
    [0x10920, 0x10939, 1],
    [0x10980, 0x109b7, 1],
    [0x109be, 0x109bf, 1],
    [0x10a00, 0x10a10, 16],
    [0x10a11, 0x10a13, 1],
    [0x10a15, 0x10a17, 1],
    [0x10a19, 0x10a33, 1],
    [0x10a60, 0x10a7c, 1],
    [0x10a80, 0x10a9c, 1],
    [0x10ac0, 0x10ac7, 1],
    [0x10ac9, 0x10ae4, 1],
    [0x10b00, 0x10b35, 1],
    [0x10b40, 0x10b55, 1],
    [0x10b60, 0x10b72, 1],
    [0x10b80, 0x10b91, 1],
    [0x10c00, 0x10c48, 1],
    [0x10c80, 0x10cb2, 1],
    [0x10cc0, 0x10cf2, 1],
    [0x11003, 0x11037, 1],
    [0x11083, 0x110af, 1],
    [0x110d0, 0x110e8, 1],
    [0x11103, 0x11126, 1],
    [0x11150, 0x11172, 1],
    [0x11176, 0x11183, 13],
    [0x11184, 0x111b2, 1],
    [0x111c1, 0x111c4, 1],
    [0x111da, 0x111dc, 2],
    [0x11200, 0x11211, 1],
    [0x11213, 0x1122b, 1],
    [0x11280, 0x11286, 1],
    [0x11288, 0x1128a, 2],
    [0x1128b, 0x1128d, 1],
    [0x1128f, 0x1129d, 1],
    [0x1129f, 0x112a8, 1],
    [0x112b0, 0x112de, 1],
    [0x11305, 0x1130c, 1],
    [0x1130f, 0x11310, 1],
    [0x11313, 0x11328, 1],
    [0x1132a, 0x11330, 1],
    [0x11332, 0x11333, 1],
    [0x11335, 0x11339, 1],
    [0x1133d, 0x11350, 19],
    [0x1135d, 0x11361, 1],
    [0x11400, 0x11434, 1],
    [0x11447, 0x1144a, 1],
    [0x11480, 0x114af, 1],
    [0x114c4, 0x114c5, 1],
    [0x114c7, 0x11580, 185],
    [0x11581, 0x115ae, 1],
    [0x115d8, 0x115db, 1],
    [0x11600, 0x1162f, 1],
    [0x11644, 0x11680, 60],
    [0x11681, 0x116aa, 1],
    [0x11700, 0x11719, 1],
    [0x118a0, 0x118df, 1],
    [0x118ff, 0x11ac0, 449],
    [0x11ac1, 0x11af8, 1],
    [0x11c00, 0x11c08, 1],
    [0x11c0a, 0x11c2e, 1],
    [0x11c40, 0x11c72, 50],
    [0x11c73, 0x11c8f, 1],
    [0x12000, 0x12399, 1],
    [0x12480, 0x12543, 1],
    [0x13000, 0x1342e, 1],
    [0x14400, 0x14646, 1],
    [0x16800, 0x16a38, 1],
    [0x16a40, 0x16a5e, 1],
    [0x16ad0, 0x16aed, 1],
    [0x16b00, 0x16b2f, 1],
    [0x16b40, 0x16b43, 1],
    [0x16b63, 0x16b77, 1],
    [0x16b7d, 0x16b8f, 1],
    [0x16f00, 0x16f44, 1],
    [0x16f50, 0x16f93, 67],
    [0x16f94, 0x16f9f, 1],
    [0x16fe0, 0x17000, 32],
    [0x17001, 0x187ec, 1],
    [0x18800, 0x18af2, 1],
    [0x1b000, 0x1b001, 1],
    [0x1bc00, 0x1bc6a, 1],
    [0x1bc70, 0x1bc7c, 1],
    [0x1bc80, 0x1bc88, 1],
    [0x1bc90, 0x1bc99, 1],
    [0x1d400, 0x1d454, 1],
    [0x1d456, 0x1d49c, 1],
    [0x1d49e, 0x1d49f, 1],
    [0x1d4a2, 0x1d4a5, 3],
    [0x1d4a6, 0x1d4a9, 3],
    [0x1d4aa, 0x1d4ac, 1],
    [0x1d4ae, 0x1d4b9, 1],
    [0x1d4bb, 0x1d4bd, 2],
    [0x1d4be, 0x1d4c3, 1],
    [0x1d4c5, 0x1d505, 1],
    [0x1d507, 0x1d50a, 1],
    [0x1d50d, 0x1d514, 1],
    [0x1d516, 0x1d51c, 1],
    [0x1d51e, 0x1d539, 1],
    [0x1d53b, 0x1d53e, 1],
    [0x1d540, 0x1d544, 1],
    [0x1d546, 0x1d54a, 4],
    [0x1d54b, 0x1d550, 1],
    [0x1d552, 0x1d6a5, 1],
    [0x1d6a8, 0x1d6c0, 1],
    [0x1d6c2, 0x1d6da, 1],
    [0x1d6dc, 0x1d6fa, 1],
    [0x1d6fc, 0x1d714, 1],
    [0x1d716, 0x1d734, 1],
    [0x1d736, 0x1d74e, 1],
    [0x1d750, 0x1d76e, 1],
    [0x1d770, 0x1d788, 1],
    [0x1d78a, 0x1d7a8, 1],
    [0x1d7aa, 0x1d7c2, 1],
    [0x1d7c4, 0x1d7cb, 1],
    [0x1e800, 0x1e8c4, 1],
    [0x1e900, 0x1e943, 1],
    [0x1ee00, 0x1ee03, 1],
    [0x1ee05, 0x1ee1f, 1],
    [0x1ee21, 0x1ee22, 1],
    [0x1ee24, 0x1ee27, 3],
    [0x1ee29, 0x1ee32, 1],
    [0x1ee34, 0x1ee37, 1],
    [0x1ee39, 0x1ee3b, 2],
    [0x1ee42, 0x1ee47, 5],
    [0x1ee49, 0x1ee4d, 2],
    [0x1ee4e, 0x1ee4f, 1],
    [0x1ee51, 0x1ee52, 1],
    [0x1ee54, 0x1ee57, 3],
    [0x1ee59, 0x1ee61, 2],
    [0x1ee62, 0x1ee64, 2],
    [0x1ee67, 0x1ee6a, 1],
    [0x1ee6c, 0x1ee72, 1],
    [0x1ee74, 0x1ee77, 1],
    [0x1ee79, 0x1ee7c, 1],
    [0x1ee7e, 0x1ee80, 2],
    [0x1ee81, 0x1ee89, 1],
    [0x1ee8b, 0x1ee9b, 1],
    [0x1eea1, 0x1eea3, 1],
    [0x1eea5, 0x1eea9, 1],
    [0x1eeab, 0x1eebb, 1],
    [0x20000, 0x2a6d6, 1],
    [0x2a700, 0x2b734, 1],
    [0x2b740, 0x2b81d, 1],
    [0x2b820, 0x2cea1, 1],
    [0x2f800, 0x2fa1d, 1],
  ],
  latinOffset: 6,
};

var properties = {
  0x00: pC,       // '\x00'
  0x01: pC,       // '\x01'
  0x02: pC,       // '\x02'
  0x03: pC,       // '\x03'
  0x04: pC,       // '\x04'
  0x05: pC,       // '\x05'
  0x06: pC,       // '\x06'
  0x07: pC,       // '\a'
  0x08: pC,       // '\b'
  0x09: pC,       // '\t'
  0x0A: pC,       // '\n'
  0x0B: pC,       // '\v'
  0x0C: pC,       // '\f'
  0x0D: pC,       // '\r'
  0x0E: pC,       // '\x0e'
  0x0F: pC,       // '\x0f'
  0x10: pC,       // '\x10'
  0x11: pC,       // '\x11'
  0x12: pC,       // '\x12'
  0x13: pC,       // '\x13'
  0x14: pC,       // '\x14'
  0x15: pC,       // '\x15'
  0x16: pC,       // '\x16'
  0x17: pC,       // '\x17'
  0x18: pC,       // '\x18'
  0x19: pC,       // '\x19'
  0x1A: pC,       // '\x1a'
  0x1B: pC,       // '\x1b'
  0x1C: pC,       // '\x1c'
  0x1D: pC,       // '\x1d'
  0x1E: pC,       // '\x1e'
  0x1F: pC,       // '\x1f'
  0x20: pZ | pp,  // ' '
  0x21: pP | pp,  // '!'
  0x22: pP | pp,  // '"'
  0x23: pP | pp,  // '#'
  0x24: pS | pp,  // '$'
  0x25: pP | pp,  // '%'
  0x26: pP | pp,  // '&'
  0x27: pP | pp,  // '\''
  0x28: pP | pp,  // '('
  0x29: pP | pp,  // ')'
  0x2A: pP | pp,  // '*'
  0x2B: pS | pp,  // '+'
  0x2C: pP | pp,  // ','
  0x2D: pP | pp,  // '-'
  0x2E: pP | pp,  // '.'
  0x2F: pP | pp,  // '/'
  0x30: pN | pp,  // '0'
  0x31: pN | pp,  // '1'
  0x32: pN | pp,  // '2'
  0x33: pN | pp,  // '3'
  0x34: pN | pp,  // '4'
  0x35: pN | pp,  // '5'
  0x36: pN | pp,  // '6'
  0x37: pN | pp,  // '7'
  0x38: pN | pp,  // '8'
  0x39: pN | pp,  // '9'
  0x3A: pP | pp,  // ':'
  0x3B: pP | pp,  // ';'
  0x3C: pS | pp,  // '<'
  0x3D: pS | pp,  // '='
  0x3E: pS | pp,  // '>'
  0x3F: pP | pp,  // '?'
  0x40: pP | pp,  // '@'
  0x41: pLu | pp, // 'A'
  0x42: pLu | pp, // 'B'
  0x43: pLu | pp, // 'C'
  0x44: pLu | pp, // 'D'
  0x45: pLu | pp, // 'E'
  0x46: pLu | pp, // 'F'
  0x47: pLu | pp, // 'G'
  0x48: pLu | pp, // 'H'
  0x49: pLu | pp, // 'I'
  0x4A: pLu | pp, // 'J'
  0x4B: pLu | pp, // 'K'
  0x4C: pLu | pp, // 'L'
  0x4D: pLu | pp, // 'M'
  0x4E: pLu | pp, // 'N'
  0x4F: pLu | pp, // 'O'
  0x50: pLu | pp, // 'P'
  0x51: pLu | pp, // 'Q'
  0x52: pLu | pp, // 'R'
  0x53: pLu | pp, // 'S'
  0x54: pLu | pp, // 'T'
  0x55: pLu | pp, // 'U'
  0x56: pLu | pp, // 'V'
  0x57: pLu | pp, // 'W'
  0x58: pLu | pp, // 'X'
  0x59: pLu | pp, // 'Y'
  0x5A: pLu | pp, // 'Z'
  0x5B: pP | pp,  // '['
  0x5C: pP | pp,  // '\\'
  0x5D: pP | pp,  // ']'
  0x5E: pS | pp,  // '^'
  0x5F: pP | pp,  // '_'
  0x60: pS | pp,  // '`'
  0x61: pLl | pp, // 'a'
  0x62: pLl | pp, // 'b'
  0x63: pLl | pp, // 'c'
  0x64: pLl | pp, // 'd'
  0x65: pLl | pp, // 'e'
  0x66: pLl | pp, // 'f'
  0x67: pLl | pp, // 'g'
  0x68: pLl | pp, // 'h'
  0x69: pLl | pp, // 'i'
  0x6A: pLl | pp, // 'j'
  0x6B: pLl | pp, // 'k'
  0x6C: pLl | pp, // 'l'
  0x6D: pLl | pp, // 'm'
  0x6E: pLl | pp, // 'n'
  0x6F: pLl | pp, // 'o'
  0x70: pLl | pp, // 'p'
  0x71: pLl | pp, // 'q'
  0x72: pLl | pp, // 'r'
  0x73: pLl | pp, // 's'
  0x74: pLl | pp, // 't'
  0x75: pLl | pp, // 'u'
  0x76: pLl | pp, // 'v'
  0x77: pLl | pp, // 'w'
  0x78: pLl | pp, // 'x'
  0x79: pLl | pp, // 'y'
  0x7A: pLl | pp, // 'z'
  0x7B: pP | pp,  // '{'
  0x7C: pS | pp,  // '|'
  0x7D: pP | pp,  // '}'
  0x7E: pS | pp,  // '~'
  0x7F: pC,       // '\u007f'
  0x80: pC,       // '\u0080'
  0x81: pC,       // '\u0081'
  0x82: pC,       // '\u0082'
  0x83: pC,       // '\u0083'
  0x84: pC,       // '\u0084'
  0x85: pC,       // '\u0085'
  0x86: pC,       // '\u0086'
  0x87: pC,       // '\u0087'
  0x88: pC,       // '\u0088'
  0x89: pC,       // '\u0089'
  0x8A: pC,       // '\u008a'
  0x8B: pC,       // '\u008b'
  0x8C: pC,       // '\u008c'
  0x8D: pC,       // '\u008d'
  0x8E: pC,       // '\u008e'
  0x8F: pC,       // '\u008f'
  0x90: pC,       // '\u0090'
  0x91: pC,       // '\u0091'
  0x92: pC,       // '\u0092'
  0x93: pC,       // '\u0093'
  0x94: pC,       // '\u0094'
  0x95: pC,       // '\u0095'
  0x96: pC,       // '\u0096'
  0x97: pC,       // '\u0097'
  0x98: pC,       // '\u0098'
  0x99: pC,       // '\u0099'
  0x9A: pC,       // '\u009a'
  0x9B: pC,       // '\u009b'
  0x9C: pC,       // '\u009c'
  0x9D: pC,       // '\u009d'
  0x9E: pC,       // '\u009e'
  0x9F: pC,       // '\u009f'
  0xA0: pZ,       // '\u00a0'
  0xA1: pP | pp,  // '¡'
  0xA2: pS | pp,  // '¢'
  0xA3: pS | pp,  // '£'
  0xA4: pS | pp,  // '¤'
  0xA5: pS | pp,  // '¥'
  0xA6: pS | pp,  // '¦'
  0xA7: pP | pp,  // '§'
  0xA8: pS | pp,  // '¨'
  0xA9: pS | pp,  // '©'
  0xAA: pLo | pp, // 'ª'
  0xAB: pP | pp,  // '«'
  0xAC: pS | pp,  // '¬'
  0xAD: 0,        // '\u00ad'
  0xAE: pS | pp,  // '®'
  0xAF: pS | pp,  // '¯'
  0xB0: pS | pp,  // '°'
  0xB1: pS | pp,  // '±'
  0xB2: pN | pp,  // '²'
  0xB3: pN | pp,  // '³'
  0xB4: pS | pp,  // '´'
  0xB5: pLl | pp, // 'µ'
  0xB6: pP | pp,  // '¶'
  0xB7: pP | pp,  // '·'
  0xB8: pS | pp,  // '¸'
  0xB9: pN | pp,  // '¹'
  0xBA: pLo | pp, // 'º'
  0xBB: pP | pp,  // '»'
  0xBC: pN | pp,  // '¼'
  0xBD: pN | pp,  // '½'
  0xBE: pN | pp,  // '¾'
  0xBF: pP | pp,  // '¿'
  0xC0: pLu | pp, // 'À'
  0xC1: pLu | pp, // 'Á'
  0xC2: pLu | pp, // 'Â'
  0xC3: pLu | pp, // 'Ã'
  0xC4: pLu | pp, // 'Ä'
  0xC5: pLu | pp, // 'Å'
  0xC6: pLu | pp, // 'Æ'
  0xC7: pLu | pp, // 'Ç'
  0xC8: pLu | pp, // 'È'
  0xC9: pLu | pp, // 'É'
  0xCA: pLu | pp, // 'Ê'
  0xCB: pLu | pp, // 'Ë'
  0xCC: pLu | pp, // 'Ì'
  0xCD: pLu | pp, // 'Í'
  0xCE: pLu | pp, // 'Î'
  0xCF: pLu | pp, // 'Ï'
  0xD0: pLu | pp, // 'Ð'
  0xD1: pLu | pp, // 'Ñ'
  0xD2: pLu | pp, // 'Ò'
  0xD3: pLu | pp, // 'Ó'
  0xD4: pLu | pp, // 'Ô'
  0xD5: pLu | pp, // 'Õ'
  0xD6: pLu | pp, // 'Ö'
  0xD7: pS | pp,  // '×'
  0xD8: pLu | pp, // 'Ø'
  0xD9: pLu | pp, // 'Ù'
  0xDA: pLu | pp, // 'Ú'
  0xDB: pLu | pp, // 'Û'
  0xDC: pLu | pp, // 'Ü'
  0xDD: pLu | pp, // 'Ý'
  0xDE: pLu | pp, // 'Þ'
  0xDF: pLl | pp, // 'ß'
  0xE0: pLl | pp, // 'à'
  0xE1: pLl | pp, // 'á'
  0xE2: pLl | pp, // 'â'
  0xE3: pLl | pp, // 'ã'
  0xE4: pLl | pp, // 'ä'
  0xE5: pLl | pp, // 'å'
  0xE6: pLl | pp, // 'æ'
  0xE7: pLl | pp, // 'ç'
  0xE8: pLl | pp, // 'è'
  0xE9: pLl | pp, // 'é'
  0xEA: pLl | pp, // 'ê'
  0xEB: pLl | pp, // 'ë'
  0xEC: pLl | pp, // 'ì'
  0xED: pLl | pp, // 'í'
  0xEE: pLl | pp, // 'î'
  0xEF: pLl | pp, // 'ï'
  0xF0: pLl | pp, // 'ð'
  0xF1: pLl | pp, // 'ñ'
  0xF2: pLl | pp, // 'ò'
  0xF3: pLl | pp, // 'ó'
  0xF4: pLl | pp, // 'ô'
  0xF5: pLl | pp, // 'õ'
  0xF6: pLl | pp, // 'ö'
  0xF7: pS | pp,  // '÷'
  0xF8: pLl | pp, // 'ø'
  0xF9: pLl | pp, // 'ù'
  0xFA: pLl | pp, // 'ú'
  0xFB: pLl | pp, // 'û'
  0xFC: pLl | pp, // 'ü'
  0xFD: pLl | pp, // 'ý'
  0xFE: pLl | pp, // 'þ'
  0xFF: pLl | pp, // 'ÿ'
};

const WhiteSpace = {
  R16: [
    [0x0009, 0x000d, 1],
    [0x0020, 0x0020, 1],
    [0x0085, 0x0085, 1],
    [0x00a0, 0x00a0, 1],
    [0x1680, 0x1680, 1],
    [0x2000, 0x200a, 1],
    [0x2028, 0x2029, 1],
    [0x202f, 0x202f, 1],
    [0x205f, 0x205f, 1],
    [0x3000, 0x3000, 1],
  ],
  latinOffset: 4,
};

const Upper = {
  R16: [
    [0x0041, 0x005a, 1],
    [0x00c0, 0x00d6, 1],
    [0x00d8, 0x00de, 1],
    [0x0100, 0x0136, 2],
    [0x0139, 0x0147, 2],
    [0x014a, 0x0178, 2],
    [0x0179, 0x017d, 2],
    [0x0181, 0x0182, 1],
    [0x0184, 0x0186, 2],
    [0x0187, 0x0189, 2],
    [0x018a, 0x018b, 1],
    [0x018e, 0x0191, 1],
    [0x0193, 0x0194, 1],
    [0x0196, 0x0198, 1],
    [0x019c, 0x019d, 1],
    [0x019f, 0x01a0, 1],
    [0x01a2, 0x01a6, 2],
    [0x01a7, 0x01a9, 2],
    [0x01ac, 0x01ae, 2],
    [0x01af, 0x01b1, 2],
    [0x01b2, 0x01b3, 1],
    [0x01b5, 0x01b7, 2],
    [0x01b8, 0x01bc, 4],
    [0x01c4, 0x01cd, 3],
    [0x01cf, 0x01db, 2],
    [0x01de, 0x01ee, 2],
    [0x01f1, 0x01f4, 3],
    [0x01f6, 0x01f8, 1],
    [0x01fa, 0x0232, 2],
    [0x023a, 0x023b, 1],
    [0x023d, 0x023e, 1],
    [0x0241, 0x0243, 2],
    [0x0244, 0x0246, 1],
    [0x0248, 0x024e, 2],
    [0x0370, 0x0372, 2],
    [0x0376, 0x037f, 9],
    [0x0386, 0x0388, 2],
    [0x0389, 0x038a, 1],
    [0x038c, 0x038e, 2],
    [0x038f, 0x0391, 2],
    [0x0392, 0x03a1, 1],
    [0x03a3, 0x03ab, 1],
    [0x03cf, 0x03d2, 3],
    [0x03d3, 0x03d4, 1],
    [0x03d8, 0x03ee, 2],
    [0x03f4, 0x03f7, 3],
    [0x03f9, 0x03fa, 1],
    [0x03fd, 0x042f, 1],
    [0x0460, 0x0480, 2],
    [0x048a, 0x04c0, 2],
    [0x04c1, 0x04cd, 2],
    [0x04d0, 0x052e, 2],
    [0x0531, 0x0556, 1],
    [0x10a0, 0x10c5, 1],
    [0x10c7, 0x10cd, 6],
    [0x13a0, 0x13f5, 1],
    [0x1e00, 0x1e94, 2],
    [0x1e9e, 0x1efe, 2],
    [0x1f08, 0x1f0f, 1],
    [0x1f18, 0x1f1d, 1],
    [0x1f28, 0x1f2f, 1],
    [0x1f38, 0x1f3f, 1],
    [0x1f48, 0x1f4d, 1],
    [0x1f59, 0x1f5f, 2],
    [0x1f68, 0x1f6f, 1],
    [0x1fb8, 0x1fbb, 1],
    [0x1fc8, 0x1fcb, 1],
    [0x1fd8, 0x1fdb, 1],
    [0x1fe8, 0x1fec, 1],
    [0x1ff8, 0x1ffb, 1],
    [0x2102, 0x2107, 5],
    [0x210b, 0x210d, 1],
    [0x2110, 0x2112, 1],
    [0x2115, 0x2119, 4],
    [0x211a, 0x211d, 1],
    [0x2124, 0x212a, 2],
    [0x212b, 0x212d, 1],
    [0x2130, 0x2133, 1],
    [0x213e, 0x213f, 1],
    [0x2145, 0x2183, 62],
    [0x2c00, 0x2c2e, 1],
    [0x2c60, 0x2c62, 2],
    [0x2c63, 0x2c64, 1],
    [0x2c67, 0x2c6d, 2],
    [0x2c6e, 0x2c70, 1],
    [0x2c72, 0x2c75, 3],
    [0x2c7e, 0x2c80, 1],
    [0x2c82, 0x2ce2, 2],
    [0x2ceb, 0x2ced, 2],
    [0x2cf2, 0xa640, 31054],
    [0xa642, 0xa66c, 2],
    [0xa680, 0xa69a, 2],
    [0xa722, 0xa72e, 2],
    [0xa732, 0xa76e, 2],
    [0xa779, 0xa77d, 2],
    [0xa77e, 0xa786, 2],
    [0xa78b, 0xa78d, 2],
    [0xa790, 0xa792, 2],
    [0xa796, 0xa7aa, 2],
    [0xa7ab, 0xa7ae, 1],
    [0xa7b0, 0xa7b4, 1],
    [0xa7b6, 0xff21, 22379],
    [0xff22, 0xff3a, 1],
  ],
  R32: [
    [0x10400, 0x10427, 1],
    [0x104b0, 0x104d3, 1],
    [0x10c80, 0x10cb2, 1],
    [0x118a0, 0x118bf, 1],
    [0x1d400, 0x1d419, 1],
    [0x1d434, 0x1d44d, 1],
    [0x1d468, 0x1d481, 1],
    [0x1d49c, 0x1d49e, 2],
    [0x1d49f, 0x1d4a5, 3],
    [0x1d4a6, 0x1d4a9, 3],
    [0x1d4aa, 0x1d4ac, 1],
    [0x1d4ae, 0x1d4b5, 1],
    [0x1d4d0, 0x1d4e9, 1],
    [0x1d504, 0x1d505, 1],
    [0x1d507, 0x1d50a, 1],
    [0x1d50d, 0x1d514, 1],
    [0x1d516, 0x1d51c, 1],
    [0x1d538, 0x1d539, 1],
    [0x1d53b, 0x1d53e, 1],
    [0x1d540, 0x1d544, 1],
    [0x1d546, 0x1d54a, 4],
    [0x1d54b, 0x1d550, 1],
    [0x1d56c, 0x1d585, 1],
    [0x1d5a0, 0x1d5b9, 1],
    [0x1d5d4, 0x1d5ed, 1],
    [0x1d608, 0x1d621, 1],
    [0x1d63c, 0x1d655, 1],
    [0x1d670, 0x1d689, 1],
    [0x1d6a8, 0x1d6c0, 1],
    [0x1d6e2, 0x1d6fa, 1],
    [0x1d71c, 0x1d734, 1],
    [0x1d756, 0x1d76e, 1],
    [0x1d790, 0x1d7a8, 1],
    [0x1d7ca, 0x1e900, 4406],
    [0x1e901, 0x1e921, 1],
  ],
  latinOffset: 3,
};

// can't require unicode or it's circular, so just redefine maxRune
const upperLower = "\udbff\udfff".codePointAt(0) + 1;

const CaseRanges = [
  [0x0041, 0x005A, [0, 32, 0]],
  [0x0061, 0x007A, [-32, 0, -32]],
  [0x00B5, 0x00B5, [743, 0, 743]],
  [0x00C0, 0x00D6, [0, 32, 0]],
  [0x00D8, 0x00DE, [0, 32, 0]],
  [0x00E0, 0x00F6, [-32, 0, -32]],
  [0x00F8, 0x00FE, [-32, 0, -32]],
  [0x00FF, 0x00FF, [121, 0, 121]],
  [0x0100, 0x012F, [upperLower, upperLower, upperLower]],
  [0x0130, 0x0130, [0, -199, 0]],
  [0x0131, 0x0131, [-232, 0, -232]],
  [0x0132, 0x0137, [upperLower, upperLower, upperLower]],
  [0x0139, 0x0148, [upperLower, upperLower, upperLower]],
  [0x014A, 0x0177, [upperLower, upperLower, upperLower]],
  [0x0178, 0x0178, [0, -121, 0]],
  [0x0179, 0x017E, [upperLower, upperLower, upperLower]],
  [0x017F, 0x017F, [-300, 0, -300]],
  [0x0180, 0x0180, [195, 0, 195]],
  [0x0181, 0x0181, [0, 210, 0]],
  [0x0182, 0x0185, [upperLower, upperLower, upperLower]],
  [0x0186, 0x0186, [0, 206, 0]],
  [0x0187, 0x0188, [upperLower, upperLower, upperLower]],
  [0x0189, 0x018A, [0, 205, 0]],
  [0x018B, 0x018C, [upperLower, upperLower, upperLower]],
  [0x018E, 0x018E, [0, 79, 0]],
  [0x018F, 0x018F, [0, 202, 0]],
  [0x0190, 0x0190, [0, 203, 0]],
  [0x0191, 0x0192, [upperLower, upperLower, upperLower]],
  [0x0193, 0x0193, [0, 205, 0]],
  [0x0194, 0x0194, [0, 207, 0]],
  [0x0195, 0x0195, [97, 0, 97]],
  [0x0196, 0x0196, [0, 211, 0]],
  [0x0197, 0x0197, [0, 209, 0]],
  [0x0198, 0x0199, [upperLower, upperLower, upperLower]],
  [0x019A, 0x019A, [163, 0, 163]],
  [0x019C, 0x019C, [0, 211, 0]],
  [0x019D, 0x019D, [0, 213, 0]],
  [0x019E, 0x019E, [130, 0, 130]],
  [0x019F, 0x019F, [0, 214, 0]],
  [0x01A0, 0x01A5, [upperLower, upperLower, upperLower]],
  [0x01A6, 0x01A6, [0, 218, 0]],
  [0x01A7, 0x01A8, [upperLower, upperLower, upperLower]],
  [0x01A9, 0x01A9, [0, 218, 0]],
  [0x01AC, 0x01AD, [upperLower, upperLower, upperLower]],
  [0x01AE, 0x01AE, [0, 218, 0]],
  [0x01AF, 0x01B0, [upperLower, upperLower, upperLower]],
  [0x01B1, 0x01B2, [0, 217, 0]],
  [0x01B3, 0x01B6, [upperLower, upperLower, upperLower]],
  [0x01B7, 0x01B7, [0, 219, 0]],
  [0x01B8, 0x01B9, [upperLower, upperLower, upperLower]],
  [0x01BC, 0x01BD, [upperLower, upperLower, upperLower]],
  [0x01BF, 0x01BF, [56, 0, 56]],
  [0x01C4, 0x01C4, [0, 2, 1]],
  [0x01C5, 0x01C5, [-1, 1, 0]],
  [0x01C6, 0x01C6, [-2, 0, -1]],
  [0x01C7, 0x01C7, [0, 2, 1]],
  [0x01C8, 0x01C8, [-1, 1, 0]],
  [0x01C9, 0x01C9, [-2, 0, -1]],
  [0x01CA, 0x01CA, [0, 2, 1]],
  [0x01CB, 0x01CB, [-1, 1, 0]],
  [0x01CC, 0x01CC, [-2, 0, -1]],
  [0x01CD, 0x01DC, [upperLower, upperLower, upperLower]],
  [0x01DD, 0x01DD, [-79, 0, -79]],
  [0x01DE, 0x01EF, [upperLower, upperLower, upperLower]],
  [0x01F1, 0x01F1, [0, 2, 1]],
  [0x01F2, 0x01F2, [-1, 1, 0]],
  [0x01F3, 0x01F3, [-2, 0, -1]],
  [0x01F4, 0x01F5, [upperLower, upperLower, upperLower]],
  [0x01F6, 0x01F6, [0, -97, 0]],
  [0x01F7, 0x01F7, [0, -56, 0]],
  [0x01F8, 0x021F, [upperLower, upperLower, upperLower]],
  [0x0220, 0x0220, [0, -130, 0]],
  [0x0222, 0x0233, [upperLower, upperLower, upperLower]],
  [0x023A, 0x023A, [0, 10795, 0]],
  [0x023B, 0x023C, [upperLower, upperLower, upperLower]],
  [0x023D, 0x023D, [0, -163, 0]],
  [0x023E, 0x023E, [0, 10792, 0]],
  [0x023F, 0x0240, [10815, 0, 10815]],
  [0x0241, 0x0242, [upperLower, upperLower, upperLower]],
  [0x0243, 0x0243, [0, -195, 0]],
  [0x0244, 0x0244, [0, 69, 0]],
  [0x0245, 0x0245, [0, 71, 0]],
  [0x0246, 0x024F, [upperLower, upperLower, upperLower]],
  [0x0250, 0x0250, [10783, 0, 10783]],
  [0x0251, 0x0251, [10780, 0, 10780]],
  [0x0252, 0x0252, [10782, 0, 10782]],
  [0x0253, 0x0253, [-210, 0, -210]],
  [0x0254, 0x0254, [-206, 0, -206]],
  [0x0256, 0x0257, [-205, 0, -205]],
  [0x0259, 0x0259, [-202, 0, -202]],
  [0x025B, 0x025B, [-203, 0, -203]],
  [0x025C, 0x025C, [42319, 0, 42319]],
  [0x0260, 0x0260, [-205, 0, -205]],
  [0x0261, 0x0261, [42315, 0, 42315]],
  [0x0263, 0x0263, [-207, 0, -207]],
  [0x0265, 0x0265, [42280, 0, 42280]],
  [0x0266, 0x0266, [42308, 0, 42308]],
  [0x0268, 0x0268, [-209, 0, -209]],
  [0x0269, 0x0269, [-211, 0, -211]],
  [0x026A, 0x026A, [42308, 0, 42308]],
  [0x026B, 0x026B, [10743, 0, 10743]],
  [0x026C, 0x026C, [42305, 0, 42305]],
  [0x026F, 0x026F, [-211, 0, -211]],
  [0x0271, 0x0271, [10749, 0, 10749]],
  [0x0272, 0x0272, [-213, 0, -213]],
  [0x0275, 0x0275, [-214, 0, -214]],
  [0x027D, 0x027D, [10727, 0, 10727]],
  [0x0280, 0x0280, [-218, 0, -218]],
  [0x0283, 0x0283, [-218, 0, -218]],
  [0x0287, 0x0287, [42282, 0, 42282]],
  [0x0288, 0x0288, [-218, 0, -218]],
  [0x0289, 0x0289, [-69, 0, -69]],
  [0x028A, 0x028B, [-217, 0, -217]],
  [0x028C, 0x028C, [-71, 0, -71]],
  [0x0292, 0x0292, [-219, 0, -219]],
  [0x029D, 0x029D, [42261, 0, 42261]],
  [0x029E, 0x029E, [42258, 0, 42258]],
  [0x0345, 0x0345, [84, 0, 84]],
  [0x0370, 0x0373, [upperLower, upperLower, upperLower]],
  [0x0376, 0x0377, [upperLower, upperLower, upperLower]],
  [0x037B, 0x037D, [130, 0, 130]],
  [0x037F, 0x037F, [0, 116, 0]],
  [0x0386, 0x0386, [0, 38, 0]],
  [0x0388, 0x038A, [0, 37, 0]],
  [0x038C, 0x038C, [0, 64, 0]],
  [0x038E, 0x038F, [0, 63, 0]],
  [0x0391, 0x03A1, [0, 32, 0]],
  [0x03A3, 0x03AB, [0, 32, 0]],
  [0x03AC, 0x03AC, [-38, 0, -38]],
  [0x03AD, 0x03AF, [-37, 0, -37]],
  [0x03B1, 0x03C1, [-32, 0, -32]],
  [0x03C2, 0x03C2, [-31, 0, -31]],
  [0x03C3, 0x03CB, [-32, 0, -32]],
  [0x03CC, 0x03CC, [-64, 0, -64]],
  [0x03CD, 0x03CE, [-63, 0, -63]],
  [0x03CF, 0x03CF, [0, 8, 0]],
  [0x03D0, 0x03D0, [-62, 0, -62]],
  [0x03D1, 0x03D1, [-57, 0, -57]],
  [0x03D5, 0x03D5, [-47, 0, -47]],
  [0x03D6, 0x03D6, [-54, 0, -54]],
  [0x03D7, 0x03D7, [-8, 0, -8]],
  [0x03D8, 0x03EF, [upperLower, upperLower, upperLower]],
  [0x03F0, 0x03F0, [-86, 0, -86]],
  [0x03F1, 0x03F1, [-80, 0, -80]],
  [0x03F2, 0x03F2, [7, 0, 7]],
  [0x03F3, 0x03F3, [-116, 0, -116]],
  [0x03F4, 0x03F4, [0, -60, 0]],
  [0x03F5, 0x03F5, [-96, 0, -96]],
  [0x03F7, 0x03F8, [upperLower, upperLower, upperLower]],
  [0x03F9, 0x03F9, [0, -7, 0]],
  [0x03FA, 0x03FB, [upperLower, upperLower, upperLower]],
  [0x03FD, 0x03FF, [0, -130, 0]],
  [0x0400, 0x040F, [0, 80, 0]],
  [0x0410, 0x042F, [0, 32, 0]],
  [0x0430, 0x044F, [-32, 0, -32]],
  [0x0450, 0x045F, [-80, 0, -80]],
  [0x0460, 0x0481, [upperLower, upperLower, upperLower]],
  [0x048A, 0x04BF, [upperLower, upperLower, upperLower]],
  [0x04C0, 0x04C0, [0, 15, 0]],
  [0x04C1, 0x04CE, [upperLower, upperLower, upperLower]],
  [0x04CF, 0x04CF, [-15, 0, -15]],
  [0x04D0, 0x052F, [upperLower, upperLower, upperLower]],
  [0x0531, 0x0556, [0, 48, 0]],
  [0x0561, 0x0586, [-48, 0, -48]],
  [0x10A0, 0x10C5, [0, 7264, 0]],
  [0x10C7, 0x10C7, [0, 7264, 0]],
  [0x10CD, 0x10CD, [0, 7264, 0]],
  [0x13A0, 0x13EF, [0, 38864, 0]],
  [0x13F0, 0x13F5, [0, 8, 0]],
  [0x13F8, 0x13FD, [-8, 0, -8]],
  [0x1C80, 0x1C80, [-6254, 0, -6254]],
  [0x1C81, 0x1C81, [-6253, 0, -6253]],
  [0x1C82, 0x1C82, [-6244, 0, -6244]],
  [0x1C83, 0x1C84, [-6242, 0, -6242]],
  [0x1C85, 0x1C85, [-6243, 0, -6243]],
  [0x1C86, 0x1C86, [-6236, 0, -6236]],
  [0x1C87, 0x1C87, [-6181, 0, -6181]],
  [0x1C88, 0x1C88, [35266, 0, 35266]],
  [0x1D79, 0x1D79, [35332, 0, 35332]],
  [0x1D7D, 0x1D7D, [3814, 0, 3814]],
  [0x1E00, 0x1E95, [upperLower, upperLower, upperLower]],
  [0x1E9B, 0x1E9B, [-59, 0, -59]],
  [0x1E9E, 0x1E9E, [0, -7615, 0]],
  [0x1EA0, 0x1EFF, [upperLower, upperLower, upperLower]],
  [0x1F00, 0x1F07, [8, 0, 8]],
  [0x1F08, 0x1F0F, [0, -8, 0]],
  [0x1F10, 0x1F15, [8, 0, 8]],
  [0x1F18, 0x1F1D, [0, -8, 0]],
  [0x1F20, 0x1F27, [8, 0, 8]],
  [0x1F28, 0x1F2F, [0, -8, 0]],
  [0x1F30, 0x1F37, [8, 0, 8]],
  [0x1F38, 0x1F3F, [0, -8, 0]],
  [0x1F40, 0x1F45, [8, 0, 8]],
  [0x1F48, 0x1F4D, [0, -8, 0]],
  [0x1F51, 0x1F51, [8, 0, 8]],
  [0x1F53, 0x1F53, [8, 0, 8]],
  [0x1F55, 0x1F55, [8, 0, 8]],
  [0x1F57, 0x1F57, [8, 0, 8]],
  [0x1F59, 0x1F59, [0, -8, 0]],
  [0x1F5B, 0x1F5B, [0, -8, 0]],
  [0x1F5D, 0x1F5D, [0, -8, 0]],
  [0x1F5F, 0x1F5F, [0, -8, 0]],
  [0x1F60, 0x1F67, [8, 0, 8]],
  [0x1F68, 0x1F6F, [0, -8, 0]],
  [0x1F70, 0x1F71, [74, 0, 74]],
  [0x1F72, 0x1F75, [86, 0, 86]],
  [0x1F76, 0x1F77, [100, 0, 100]],
  [0x1F78, 0x1F79, [128, 0, 128]],
  [0x1F7A, 0x1F7B, [112, 0, 112]],
  [0x1F7C, 0x1F7D, [126, 0, 126]],
  [0x1F80, 0x1F87, [8, 0, 8]],
  [0x1F88, 0x1F8F, [0, -8, 0]],
  [0x1F90, 0x1F97, [8, 0, 8]],
  [0x1F98, 0x1F9F, [0, -8, 0]],
  [0x1FA0, 0x1FA7, [8, 0, 8]],
  [0x1FA8, 0x1FAF, [0, -8, 0]],
  [0x1FB0, 0x1FB1, [8, 0, 8]],
  [0x1FB3, 0x1FB3, [9, 0, 9]],
  [0x1FB8, 0x1FB9, [0, -8, 0]],
  [0x1FBA, 0x1FBB, [0, -74, 0]],
  [0x1FBC, 0x1FBC, [0, -9, 0]],
  [0x1FBE, 0x1FBE, [-7205, 0, -7205]],
  [0x1FC3, 0x1FC3, [9, 0, 9]],
  [0x1FC8, 0x1FCB, [0, -86, 0]],
  [0x1FCC, 0x1FCC, [0, -9, 0]],
  [0x1FD0, 0x1FD1, [8, 0, 8]],
  [0x1FD8, 0x1FD9, [0, -8, 0]],
  [0x1FDA, 0x1FDB, [0, -100, 0]],
  [0x1FE0, 0x1FE1, [8, 0, 8]],
  [0x1FE5, 0x1FE5, [7, 0, 7]],
  [0x1FE8, 0x1FE9, [0, -8, 0]],
  [0x1FEA, 0x1FEB, [0, -112, 0]],
  [0x1FEC, 0x1FEC, [0, -7, 0]],
  [0x1FF3, 0x1FF3, [9, 0, 9]],
  [0x1FF8, 0x1FF9, [0, -128, 0]],
  [0x1FFA, 0x1FFB, [0, -126, 0]],
  [0x1FFC, 0x1FFC, [0, -9, 0]],
  [0x2126, 0x2126, [0, -7517, 0]],
  [0x212A, 0x212A, [0, -8383, 0]],
  [0x212B, 0x212B, [0, -8262, 0]],
  [0x2132, 0x2132, [0, 28, 0]],
  [0x214E, 0x214E, [-28, 0, -28]],
  [0x2160, 0x216F, [0, 16, 0]],
  [0x2170, 0x217F, [-16, 0, -16]],
  [0x2183, 0x2184, [upperLower, upperLower, upperLower]],
  [0x24B6, 0x24CF, [0, 26, 0]],
  [0x24D0, 0x24E9, [-26, 0, -26]],
  [0x2C00, 0x2C2E, [0, 48, 0]],
  [0x2C30, 0x2C5E, [-48, 0, -48]],
  [0x2C60, 0x2C61, [upperLower, upperLower, upperLower]],
  [0x2C62, 0x2C62, [0, -10743, 0]],
  [0x2C63, 0x2C63, [0, -3814, 0]],
  [0x2C64, 0x2C64, [0, -10727, 0]],
  [0x2C65, 0x2C65, [-10795, 0, -10795]],
  [0x2C66, 0x2C66, [-10792, 0, -10792]],
  [0x2C67, 0x2C6C, [upperLower, upperLower, upperLower]],
  [0x2C6D, 0x2C6D, [0, -10780, 0]],
  [0x2C6E, 0x2C6E, [0, -10749, 0]],
  [0x2C6F, 0x2C6F, [0, -10783, 0]],
  [0x2C70, 0x2C70, [0, -10782, 0]],
  [0x2C72, 0x2C73, [upperLower, upperLower, upperLower]],
  [0x2C75, 0x2C76, [upperLower, upperLower, upperLower]],
  [0x2C7E, 0x2C7F, [0, -10815, 0]],
  [0x2C80, 0x2CE3, [upperLower, upperLower, upperLower]],
  [0x2CEB, 0x2CEE, [upperLower, upperLower, upperLower]],
  [0x2CF2, 0x2CF3, [upperLower, upperLower, upperLower]],
  [0x2D00, 0x2D25, [-7264, 0, -7264]],
  [0x2D27, 0x2D27, [-7264, 0, -7264]],
  [0x2D2D, 0x2D2D, [-7264, 0, -7264]],
  [0xA640, 0xA66D, [upperLower, upperLower, upperLower]],
  [0xA680, 0xA69B, [upperLower, upperLower, upperLower]],
  [0xA722, 0xA72F, [upperLower, upperLower, upperLower]],
  [0xA732, 0xA76F, [upperLower, upperLower, upperLower]],
  [0xA779, 0xA77C, [upperLower, upperLower, upperLower]],
  [0xA77D, 0xA77D, [0, -35332, 0]],
  [0xA77E, 0xA787, [upperLower, upperLower, upperLower]],
  [0xA78B, 0xA78C, [upperLower, upperLower, upperLower]],
  [0xA78D, 0xA78D, [0, -42280, 0]],
  [0xA790, 0xA793, [upperLower, upperLower, upperLower]],
  [0xA796, 0xA7A9, [upperLower, upperLower, upperLower]],
  [0xA7AA, 0xA7AA, [0, -42308, 0]],
  [0xA7AB, 0xA7AB, [0, -42319, 0]],
  [0xA7AC, 0xA7AC, [0, -42315, 0]],
  [0xA7AD, 0xA7AD, [0, -42305, 0]],
  [0xA7AE, 0xA7AE, [0, -42308, 0]],
  [0xA7B0, 0xA7B0, [0, -42258, 0]],
  [0xA7B1, 0xA7B1, [0, -42282, 0]],
  [0xA7B2, 0xA7B2, [0, -42261, 0]],
  [0xA7B3, 0xA7B3, [0, 928, 0]],
  [0xA7B4, 0xA7B7, [upperLower, upperLower, upperLower]],
  [0xAB53, 0xAB53, [-928, 0, -928]],
  [0xAB70, 0xABBF, [-38864, 0, -38864]],
  [0xFF21, 0xFF3A, [0, 32, 0]],
  [0xFF41, 0xFF5A, [-32, 0, -32]],
  [0x10400, 0x10427, [0, 40, 0]],
  [0x10428, 0x1044F, [-40, 0, -40]],
  [0x104B0, 0x104D3, [0, 40, 0]],
  [0x104D8, 0x104FB, [-40, 0, -40]],
  [0x10C80, 0x10CB2, [0, 64, 0]],
  [0x10CC0, 0x10CF2, [-64, 0, -64]],
  [0x118A0, 0x118BF, [0, 32, 0]],
  [0x118C0, 0x118DF, [-32, 0, -32]],
  [0x1E900, 0x1E921, [0, 34, 0]],
  [0x1E922, 0x1E943, [-34, 0, -34]],
];

module.exports = {
  CaseRanges: CaseRanges,
  Digit: Digit,
  Letter: Letter,
  Upper: Upper,
  WhiteSpace: WhiteSpace,
  properties: properties,
  pLmask: pLmask,
  pLu: pLu,
};
